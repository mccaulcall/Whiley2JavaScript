package testing;

import org.junit.*;

public class TestAll {

    static long startTime;
    static long endTime;

    @BeforeClass public static  void recordStartTime() { startTime = System.currentTimeMillis(); }
    @AfterClass public static void totalTime() {
        endTime = System.currentTimeMillis();
		System.out.println("------------------------------------------------------\n");
        System.out.println("Total time to execute all tests: " + (endTime - startTime) + "ms");
    }

    @Test public void Access_Valid_1() throws Exception { TestFile.runTest("Access_Valid_1"); }
    @Test public void Access_Valid_2() throws Exception { TestFile.runTest("Access_Valid_2"); }
    @Test public void Asserteq() throws Exception { TestFile.runTest("Asserteq"); }
    @Test public void Assertne() throws Exception { TestFile.runTest("Assertne"); }
    @Test public void Assume_Valid_1() throws Exception { TestFile.runTest("Assume_Valid_1"); }
    @Test public void Assume_Valid_2() throws Exception { TestFile.runTest("Assume_Valid_2"); }
    @Test public void Basic() throws Exception { TestFile.runTest("Basic"); }
    @Test public void BasicPlus() throws Exception { TestFile.runTest("BasicPlus"); }
    @Test public void BoolAssign_Valid_1() throws Exception { TestFile.runTest("BoolAssign_Valid_1"); }
    @Test public void BoolAssign_Valid_2() throws Exception { TestFile.runTest("BoolAssign_Valid_2"); }
    @Test public void BoolAssign_Valid_3() throws Exception { TestFile.runTest("BoolAssign_Valid_3"); }
    @Test public void BoolAssign_Valid_4() throws Exception { TestFile.runTest("BoolAssign_Valid_4"); }
    @Test public void BoolAssign_Valid_5() throws Exception { TestFile.runTest("BoolAssign_Valid_5"); }
    @Test public void BoolAssign_Valid_6() throws Exception { TestFile.runTest("BoolAssign_Valid_6"); }
    @Test public void BoolFun_Valid_1() throws Exception { TestFile.runTest("BoolFun_Valid_1"); }
    @Test public void BoolIfElse_Valid_1() throws Exception { TestFile.runTest("BoolIfElse_Valid_1"); }
    @Test public void BoolIfElse_Valid_2() throws Exception { TestFile.runTest("BoolIfElse_Valid_2"); }
    @Test public void BoolList_Valid_1() throws Exception { TestFile.runTest("BoolList_Valid_1"); }
    @Test public void BoolList_Valid_2() throws Exception { TestFile.runTest("BoolList_Valid_2"); }
    @Test public void BoolList_Valid_3() throws Exception { TestFile.runTest("BoolList_Valid_3"); }
    @Test public void BoolRecord_Valid_1() throws Exception { TestFile.runTest("BoolRecord_Valid_1"); }
    @Test public void BoolRecord_Valid_2() throws Exception { TestFile.runTest("BoolRecord_Valid_2"); }
    @Test public void BoolRequires_Valid_1() throws Exception { TestFile.runTest("BoolRequires_Valid_1"); }
    @Test public void BoolReturn_Valid_1() throws Exception { TestFile.runTest("BoolReturn_Valid_1"); }
    @Test public void Byte_Valid_1() throws Exception { TestFile.runTest("Byte_Valid_1"); }
    @Test public void Byte_Valid_2() throws Exception { TestFile.runTest("Byte_Valid_2"); }
    @Test public void Byte_Valid_3() throws Exception { TestFile.runTest("Byte_Valid_3"); }
    @Test public void Byte_Valid_4() throws Exception { TestFile.runTest("Byte_Valid_4"); }
    @Test public void Byte_Valid_5() throws Exception { TestFile.runTest("Byte_Valid_5"); }
    @Test public void Byte_Valid_6() throws Exception { TestFile.runTest("Byte_Valid_6"); }
    @Test public void Byte_Valid_7() throws Exception { TestFile.runTest("Byte_Valid_7"); }
    @Test public void Byte_Valid_8() throws Exception { TestFile.runTest("Byte_Valid_8"); }
    @Test public void Byte_Valid_9() throws Exception { TestFile.runTest("Byte_Valid_9"); }
    @Test public void Cast_Valid_1() throws Exception { TestFile.runTest("Cast_Valid_1"); }
    @Test public void Cast_Valid_2() throws Exception { TestFile.runTest("Cast_Valid_2"); }
    @Test public void Cast_Valid_3() throws Exception { TestFile.runTest("Cast_Valid_3"); }
    @Test public void Cast_Valid_4() throws Exception { TestFile.runTest("Cast_Valid_4"); }
    @Test public void Cast_Valid_5() throws Exception { TestFile.runTest("Cast_Valid_5"); }
    @Test public void Cast_Valid_6() throws Exception { TestFile.runTest("Cast_Valid_6"); }
    @Test public void Coercion_Valid_1() throws Exception { TestFile.runTest("Coercion_Valid_1"); }
    @Test public void Coercion_Valid_2() throws Exception { TestFile.runTest("Coercion_Valid_2"); }
    @Test public void Coercion_Valid_3() throws Exception { TestFile.runTest("Coercion_Valid_3"); }
    @Test public void Coercion_Valid_7() throws Exception { TestFile.runTest("Coercion_Valid_7"); }
    @Test public void Coercion_Valid_9() throws Exception { TestFile.runTest("Coercion_Valid_9"); }
    @Test public void Complex_Valid_1() throws Exception { TestFile.runTest("Complex_Valid_1"); }
    @Test public void Complex_Valid_2() throws Exception { TestFile.runTest("Complex_Valid_2"); }
    @Test public void Complex_Valid_4() throws Exception { TestFile.runTest("Complex_Valid_4"); }
    @Test public void Complex_Valid_5() throws Exception { TestFile.runTest("Complex_Valid_5"); }
    @Test public void Complex_Valid_6() throws Exception { TestFile.runTest("Complex_Valid_6"); }
    @Test public void Complex_Valid_7() throws Exception { TestFile.runTest("Complex_Valid_7"); }
    @Test public void Complex_Valid_8() throws Exception { TestFile.runTest("Complex_Valid_8"); }
    @Test public void Constant_Valid_3() throws Exception { TestFile.runTest("Constant_Valid_3"); }
    @Test public void ConstrainedInt_Valid_1() throws Exception { TestFile.runTest("ConstrainedInt_Valid_1"); }
    @Test public void ConstrainedInt_Valid_10() throws Exception { TestFile.runTest("ConstrainedInt_Valid_10"); }
    @Test public void ConstrainedInt_Valid_12() throws Exception { TestFile.runTest("ConstrainedInt_Valid_12"); }
    @Test public void ConstrainedInt_Valid_13() throws Exception { TestFile.runTest("ConstrainedInt_Valid_13"); }
    @Test public void ConstrainedInt_Valid_15() throws Exception { TestFile.runTest("ConstrainedInt_Valid_15"); }
    @Test public void ConstrainedInt_Valid_16() throws Exception { TestFile.runTest("ConstrainedInt_Valid_16"); }
    @Test public void ConstrainedInt_Valid_17() throws Exception { TestFile.runTest("ConstrainedInt_Valid_17"); }
    @Test public void ConstrainedInt_Valid_18() throws Exception { TestFile.runTest("ConstrainedInt_Valid_18"); }
    @Test public void ConstrainedInt_Valid_19() throws Exception { TestFile.runTest("ConstrainedInt_Valid_19"); }
    @Test public void ConstrainedInt_Valid_2() throws Exception { TestFile.runTest("ConstrainedInt_Valid_2"); }
    @Test public void ConstrainedInt_Valid_20() throws Exception { TestFile.runTest("ConstrainedInt_Valid_20"); }
    @Test public void ConstrainedInt_Valid_21() throws Exception { TestFile.runTest("ConstrainedInt_Valid_21"); }
    @Test public void ConstrainedInt_Valid_22() throws Exception { TestFile.runTest("ConstrainedInt_Valid_22"); }
    @Test public void ConstrainedInt_Valid_23() throws Exception { TestFile.runTest("ConstrainedInt_Valid_23"); }
    @Test public void ConstrainedInt_Valid_24() throws Exception { TestFile.runTest("ConstrainedInt_Valid_24"); }
    @Test public void ConstrainedInt_Valid_3() throws Exception { TestFile.runTest("ConstrainedInt_Valid_3"); }
    @Test public void ConstrainedInt_Valid_4() throws Exception { TestFile.runTest("ConstrainedInt_Valid_4"); }
    @Test public void ConstrainedInt_Valid_5() throws Exception { TestFile.runTest("ConstrainedInt_Valid_5"); }
    @Test public void ConstrainedInt_Valid_6() throws Exception { TestFile.runTest("ConstrainedInt_Valid_6"); }
    @Test public void ConstrainedInt_Valid_8() throws Exception { TestFile.runTest("ConstrainedInt_Valid_8"); }
    @Test public void ConstrainedList_Valid_1() throws Exception { TestFile.runTest("ConstrainedList_Valid_1"); }
    @Test public void ConstrainedList_Valid_11() throws Exception { TestFile.runTest("ConstrainedList_Valid_11"); }
    @Test public void ConstrainedList_Valid_12() throws Exception { TestFile.runTest("ConstrainedList_Valid_12"); }
    @Test public void ConstrainedList_Valid_14() throws Exception { TestFile.runTest("ConstrainedList_Valid_14"); }
    @Test public void ConstrainedList_Valid_15() throws Exception { TestFile.runTest("ConstrainedList_Valid_15"); }
    @Test public void ConstrainedList_Valid_16() throws Exception { TestFile.runTest("ConstrainedList_Valid_16"); }
    @Test public void ConstrainedList_Valid_17() throws Exception { TestFile.runTest("ConstrainedList_Valid_17"); }
    @Test public void ConstrainedList_Valid_18() throws Exception { TestFile.runTest("ConstrainedList_Valid_18"); }
    @Test public void ConstrainedList_Valid_19() throws Exception { TestFile.runTest("ConstrainedList_Valid_19"); }
    @Test public void ConstrainedList_Valid_2() throws Exception { TestFile.runTest("ConstrainedList_Valid_2"); }
    @Test public void ConstrainedList_Valid_20() throws Exception { TestFile.runTest("ConstrainedList_Valid_20"); }
    @Test public void ConstrainedList_Valid_21() throws Exception { TestFile.runTest("ConstrainedList_Valid_21"); }
    @Test public void ConstrainedList_Valid_22() throws Exception { TestFile.runTest("ConstrainedList_Valid_22"); }
    @Test public void ConstrainedList_Valid_23() throws Exception { TestFile.runTest("ConstrainedList_Valid_23"); }
    @Test public void ConstrainedList_Valid_25() throws Exception { TestFile.runTest("ConstrainedList_Valid_25"); }
    @Test public void ConstrainedList_Valid_26() throws Exception { TestFile.runTest("ConstrainedList_Valid_26"); }
    @Test public void ConstrainedList_Valid_27() throws Exception { TestFile.runTest("ConstrainedList_Valid_27"); }
    @Test public void ConstrainedList_Valid_3() throws Exception { TestFile.runTest("ConstrainedList_Valid_3"); }
    @Test public void ConstrainedList_Valid_4() throws Exception { TestFile.runTest("ConstrainedList_Valid_4"); }
    @Test public void ConstrainedList_Valid_5() throws Exception { TestFile.runTest("ConstrainedList_Valid_5"); }
    @Test public void ConstrainedList_Valid_6() throws Exception { TestFile.runTest("ConstrainedList_Valid_6"); }
    @Test public void ConstrainedList_Valid_7() throws Exception { TestFile.runTest("ConstrainedList_Valid_7"); }
    @Test public void ConstrainedList_Valid_8() throws Exception { TestFile.runTest("ConstrainedList_Valid_8"); }
    @Test public void ConstrainedList_Valid_9() throws Exception { TestFile.runTest("ConstrainedList_Valid_9"); }
    @Test public void ConstrainedRecord_Valid_1() throws Exception { TestFile.runTest("ConstrainedRecord_Valid_1"); }
    @Test public void ConstrainedRecord_Valid_10() throws Exception { TestFile.runTest("ConstrainedRecord_Valid_10"); }
    @Test public void ConstrainedRecord_Valid_2() throws Exception { TestFile.runTest("ConstrainedRecord_Valid_2"); }
    @Test public void ConstrainedRecord_Valid_3() throws Exception { TestFile.runTest("ConstrainedRecord_Valid_3"); }
    @Test public void ConstrainedRecord_Valid_4() throws Exception { TestFile.runTest("ConstrainedRecord_Valid_4"); }
    @Test public void ConstrainedRecord_Valid_5() throws Exception { TestFile.runTest("ConstrainedRecord_Valid_5"); }
    @Test public void ConstrainedRecord_Valid_6() throws Exception { TestFile.runTest("ConstrainedRecord_Valid_6"); }
    @Test public void ConstrainedRecord_Valid_8() throws Exception { TestFile.runTest("ConstrainedRecord_Valid_8"); }
    @Test public void ConstrainedRecord_Valid_9() throws Exception { TestFile.runTest("ConstrainedRecord_Valid_9"); }
    @Test public void ConstrainedReference_Valid_1() throws Exception { TestFile.runTest("ConstrainedReference_Valid_1"); }
    @Test public void ConstrainedTuple_Valid_1() throws Exception { TestFile.runTest("ConstrainedTuple_Valid_1"); }
    @Test public void ConstrainedTuple_Valid_2() throws Exception { TestFile.runTest("ConstrainedTuple_Valid_2"); }
    @Test public void ConstrainedUnion_Valid_1() throws Exception { TestFile.runTest("ConstrainedUnion_Valid_1"); }
    @Test public void Contractive_Valid_2() throws Exception { TestFile.runTest("Contractive_Valid_2"); }
    @Test public void DecimalAssignment_Valid_1() throws Exception { TestFile.runTest("DecimalAssignment_Valid_1"); }
    @Test public void Define_Valid_1() throws Exception { TestFile.runTest("Define_Valid_1"); }
    @Test public void Define_Valid_2() throws Exception { TestFile.runTest("Define_Valid_2"); }
    @Test public void Define_Valid_3() throws Exception { TestFile.runTest("Define_Valid_3"); }
    @Test public void Define_Valid_4() throws Exception { TestFile.runTest("Define_Valid_4"); }
    @Test public void DoWhile_Valid_1() throws Exception { TestFile.runTest("DoWhile_Valid_1"); }
    @Test public void DoWhile_Valid_2() throws Exception { TestFile.runTest("DoWhile_Valid_2"); }
    @Test public void DoWhile_Valid_3() throws Exception { TestFile.runTest("DoWhile_Valid_3"); }
    @Test public void DoWhile_Valid_5() throws Exception { TestFile.runTest("DoWhile_Valid_5"); }
    @Test public void DoWhile_Valid_6() throws Exception { TestFile.runTest("DoWhile_Valid_6"); }
    @Test public void EffectiveList_Valid_1() throws Exception { TestFile.runTest("EffectiveList_Valid_1"); }
    @Test public void Ensures_Valid_1() throws Exception { TestFile.runTest("Ensures_Valid_1"); }
    @Test public void Ensures_Valid_2() throws Exception { TestFile.runTest("Ensures_Valid_2"); }
    @Test public void Ensures_Valid_3() throws Exception { TestFile.runTest("Ensures_Valid_3"); }
    @Test public void Ensures_Valid_4() throws Exception { TestFile.runTest("Ensures_Valid_4"); }
    @Test public void Ensures_Valid_5() throws Exception { TestFile.runTest("Ensures_Valid_5"); }
    @Test public void Ensures_Valid_6() throws Exception { TestFile.runTest("Ensures_Valid_6"); }
    @Test public void Ensures_Valid_7() throws Exception { TestFile.runTest("Ensures_Valid_7"); }
    @Test public void Ensures_Valid_8() throws Exception { TestFile.runTest("Ensures_Valid_8"); }
    @Test public void FunctionRef_Valid_1() throws Exception { TestFile.runTest("FunctionRef_Valid_1"); }
    @Test public void FunctionRef_Valid_3() throws Exception { TestFile.runTest("FunctionRef_Valid_3"); }
    @Test public void FunctionRef_Valid_4() throws Exception { TestFile.runTest("FunctionRef_Valid_4"); }
    @Test public void FunctionRef_Valid_5() throws Exception { TestFile.runTest("FunctionRef_Valid_5"); }
    @Test public void FunctionRef_Valid_6() throws Exception { TestFile.runTest("FunctionRef_Valid_6"); }
    @Test public void FunctionRef_Valid_7() throws Exception { TestFile.runTest("FunctionRef_Valid_7"); }
    @Test public void FunctionRef_Valid_8() throws Exception { TestFile.runTest("FunctionRef_Valid_8"); }
    @Test public void FunctionRef_Valid_9() throws Exception { TestFile.runTest("FunctionRef_Valid_9"); }
    @Test public void Function_Valid_1() throws Exception { TestFile.runTest("Function_Valid_1"); }
    @Test public void Function_Valid_12() throws Exception { TestFile.runTest("Function_Valid_12"); }
    @Test public void Function_Valid_13() throws Exception { TestFile.runTest("Function_Valid_13"); }
    @Test public void Function_Valid_14() throws Exception { TestFile.runTest("Function_Valid_14"); }
    @Test public void Function_Valid_16() throws Exception { TestFile.runTest("Function_Valid_16"); }
    @Test public void Function_Valid_17() throws Exception { TestFile.runTest("Function_Valid_17"); }
    @Test public void Function_Valid_18() throws Exception { TestFile.runTest("Function_Valid_18"); }
    @Test public void Function_Valid_2() throws Exception { TestFile.runTest("Function_Valid_2"); }
    @Test public void Function_Valid_20() throws Exception { TestFile.runTest("Function_Valid_20"); }
    @Test public void Function_Valid_21() throws Exception { TestFile.runTest("Function_Valid_21"); }
    @Test public void Function_Valid_3() throws Exception { TestFile.runTest("Function_Valid_3"); }
    @Test public void Function_Valid_4() throws Exception { TestFile.runTest("Function_Valid_4"); }
    @Test public void Function_Valid_5() throws Exception { TestFile.runTest("Function_Valid_5"); }
    @Test public void Function_Valid_6() throws Exception { TestFile.runTest("Function_Valid_6"); }
    @Test public void Function_Valid_7() throws Exception { TestFile.runTest("Function_Valid_7"); }
    @Test public void Function_Valid_8() throws Exception { TestFile.runTest("Function_Valid_8"); }
    @Test public void Function_Valid_9() throws Exception { TestFile.runTest("Function_Valid_9"); }
    @Test public void HexAssign_Valid_1() throws Exception { TestFile.runTest("HexAssign_Valid_1"); }
    @Test public void IfElse_Valid_1() throws Exception { TestFile.runTest("IfElse_Valid_1"); }
    @Test public void IfElse_Valid_2() throws Exception { TestFile.runTest("IfElse_Valid_2"); }
    @Test public void IfElse_Valid_3() throws Exception { TestFile.runTest("IfElse_Valid_3"); }
    @Test public void IfElse_Valid_4() throws Exception { TestFile.runTest("IfElse_Valid_4"); }
    @Test public void IfElse_Valid_5() throws Exception { TestFile.runTest("IfElse_Valid_5"); }
    @Test public void Import_Valid_1() throws Exception { TestFile.runTest("Import_Valid_1"); }
    @Test public void Import_Valid_2() throws Exception { TestFile.runTest("Import_Valid_2"); }
    @Test public void Import_Valid_3() throws Exception { TestFile.runTest("Import_Valid_3"); }
    @Test public void Import_Valid_6() throws Exception { TestFile.runTest("Import_Valid_6"); }
    @Test public void IntConst_Valid_1() throws Exception { TestFile.runTest("IntConst_Valid_1"); }
    @Test public void IntDefine_Valid_1() throws Exception { TestFile.runTest("IntDefine_Valid_1"); }
    @Test public void IntDefine_Valid_2() throws Exception { TestFile.runTest("IntDefine_Valid_2"); }
    @Test public void IntDiv_Valid_1() throws Exception { TestFile.runTest("IntDiv_Valid_1"); }
    @Test public void IntDiv_Valid_3() throws Exception { TestFile.runTest("IntDiv_Valid_3"); }
    @Test public void IntDiv_Valid_4() throws Exception { TestFile.runTest("IntDiv_Valid_4"); }
    @Test public void IntDiv_Valid_5() throws Exception { TestFile.runTest("IntDiv_Valid_5"); }
    @Test public void IntEquals_Valid_1() throws Exception { TestFile.runTest("IntEquals_Valid_1"); }
    @Test public void IntMul_Valid_1() throws Exception { TestFile.runTest("IntMul_Valid_1"); }
    @Test public void IntMul_Valid_2() throws Exception { TestFile.runTest("IntMul_Valid_2"); }
    @Test public void IntOp_Valid_1() throws Exception { TestFile.runTest("IntOp_Valid_1"); }
    @Test public void Lambda_Valid_1() throws Exception { TestFile.runTest("Lambda_Valid_1"); }
    @Test public void Lambda_Valid_2() throws Exception { TestFile.runTest("Lambda_Valid_2"); }
    @Test public void Lambda_Valid_3() throws Exception { TestFile.runTest("Lambda_Valid_3"); }
    @Test public void Lambda_Valid_4() throws Exception { TestFile.runTest("Lambda_Valid_4"); }
    @Test public void Lambda_Valid_5() throws Exception { TestFile.runTest("Lambda_Valid_5"); }
    @Test public void Lambda_Valid_6() throws Exception { TestFile.runTest("Lambda_Valid_6"); }
    @Test public void Lambda_Valid_7() throws Exception { TestFile.runTest("Lambda_Valid_7"); }
    @Test public void Lambda_Valid_8() throws Exception { TestFile.runTest("Lambda_Valid_8"); }
    @Test public void Lambda_Valid_9() throws Exception { TestFile.runTest("Lambda_Valid_9"); }
    @Test public void LengthOf_Valid_1() throws Exception { TestFile.runTest("LengthOf_Valid_1"); }
    @Test public void LengthOf_Valid_4() throws Exception { TestFile.runTest("LengthOf_Valid_4"); }
    @Test public void LengthOf_Valid_5() throws Exception { TestFile.runTest("LengthOf_Valid_5"); }
    @Test public void ListAccess_Valid_1() throws Exception { TestFile.runTest("ListAccess_Valid_1"); }
    @Test public void ListAccess_Valid_3() throws Exception { TestFile.runTest("ListAccess_Valid_3"); }
    @Test public void ListAccess_Valid_5() throws Exception { TestFile.runTest("ListAccess_Valid_5"); }
    @Test public void ListAccess_Valid_8() throws Exception { TestFile.runTest("ListAccess_Valid_8"); }
    @Test public void ListAccess_Valid_9() throws Exception { TestFile.runTest("ListAccess_Valid_9"); }
    @Test public void ListAppend_Valid_1() throws Exception { TestFile.runTest("ListAppend_Valid_1"); }
    @Test public void ListAppend_Valid_11() throws Exception { TestFile.runTest("ListAppend_Valid_11"); }
    @Test public void ListAppend_Valid_13() throws Exception { TestFile.runTest("ListAppend_Valid_13"); }
    @Test public void ListAppend_Valid_14() throws Exception { TestFile.runTest("ListAppend_Valid_14"); }
    @Test public void ListAppend_Valid_2() throws Exception { TestFile.runTest("ListAppend_Valid_2"); }
    @Test public void ListAppend_Valid_3() throws Exception { TestFile.runTest("ListAppend_Valid_3"); }
    @Test public void ListAppend_Valid_4() throws Exception { TestFile.runTest("ListAppend_Valid_4"); }
    @Test public void ListAppend_Valid_5() throws Exception { TestFile.runTest("ListAppend_Valid_5"); }
    @Test public void ListAppend_Valid_6() throws Exception { TestFile.runTest("ListAppend_Valid_6"); }
    @Test public void ListAppend_Valid_7() throws Exception { TestFile.runTest("ListAppend_Valid_7"); }
    @Test public void ListAppend_Valid_8() throws Exception { TestFile.runTest("ListAppend_Valid_8"); }
    @Test public void ListAppend_Valid_9() throws Exception { TestFile.runTest("ListAppend_Valid_9"); }
    @Test public void ListAssign_Valid_1() throws Exception { TestFile.runTest("ListAssign_Valid_1"); }
    @Test public void ListAssign_Valid_11() throws Exception { TestFile.runTest("ListAssign_Valid_11"); }
    @Test public void ListAssign_Valid_2() throws Exception { TestFile.runTest("ListAssign_Valid_2"); }
    @Test public void ListAssign_Valid_3() throws Exception { TestFile.runTest("ListAssign_Valid_3"); }
    @Test public void ListAssign_Valid_4() throws Exception { TestFile.runTest("ListAssign_Valid_4"); }
    @Test public void ListAssign_Valid_5() throws Exception { TestFile.runTest("ListAssign_Valid_5"); }
    @Test public void ListAssign_Valid_6() throws Exception { TestFile.runTest("ListAssign_Valid_6"); }
    @Test public void ListAssign_Valid_7() throws Exception { TestFile.runTest("ListAssign_Valid_7"); }
    @Test public void ListAssign_Valid_8() throws Exception { TestFile.runTest("ListAssign_Valid_8"); }
    @Test public void ListAssign_Valid_9() throws Exception { TestFile.runTest("ListAssign_Valid_9"); }
    @Test public void ListConversion_Valid_1() throws Exception { TestFile.runTest("ListConversion_Valid_1"); }
    @Test public void ListElemOf_Valid_1() throws Exception { TestFile.runTest("ListElemOf_Valid_1"); }
    @Test public void ListEmpty_Valid_1() throws Exception { TestFile.runTest("ListEmpty_Valid_1"); }
    @Test public void ListEquals_Valid_1() throws Exception { TestFile.runTest("ListEquals_Valid_1"); }
    @Test public void ListGenerator_Valid_1() throws Exception { TestFile.runTest("ListGenerator_Valid_1"); }
    @Test public void ListGenerator_Valid_2() throws Exception { TestFile.runTest("ListGenerator_Valid_2"); }
    @Test public void ListGenerator_Valid_3() throws Exception { TestFile.runTest("ListGenerator_Valid_3"); }
    @Test public void ListGenerator_Valid_5() throws Exception { TestFile.runTest("ListGenerator_Valid_5"); }
    @Test public void ListLength_Valid_1() throws Exception { TestFile.runTest("ListLength_Valid_1"); }
    @Test public void ListLength_Valid_2() throws Exception { TestFile.runTest("ListLength_Valid_2"); }
    @Test public void ListLength_Valid_3() throws Exception { TestFile.runTest("ListLength_Valid_3"); }
    @Test public void ListRange_Valid_1() throws Exception { TestFile.runTest("ListRange_Valid_1"); }
    @Test public void ListSublist_Valid_1() throws Exception { TestFile.runTest("ListSublist_Valid_1"); }
    @Test public void ListSublist_Valid_2() throws Exception { TestFile.runTest("ListSublist_Valid_2"); }
    @Test public void ListSublist_Valid_3() throws Exception { TestFile.runTest("ListSublist_Valid_3"); }
    @Test public void ListSublist_Valid_4() throws Exception { TestFile.runTest("ListSublist_Valid_4"); }
    @Test public void ListSublist_Valid_5() throws Exception { TestFile.runTest("ListSublist_Valid_5"); }
    @Test public void MessageRef_Valid_1() throws Exception { TestFile.runTest("MessageRef_Valid_1"); }
    @Test public void MessageRef_Valid_2() throws Exception { TestFile.runTest("MessageRef_Valid_2"); }
    @Test public void MessageSend_Valid_1() throws Exception { TestFile.runTest("MessageSend_Valid_1"); }
    @Test public void MessageSend_Valid_2() throws Exception { TestFile.runTest("MessageSend_Valid_2"); }
    @Test public void MessageSend_Valid_3() throws Exception { TestFile.runTest("MessageSend_Valid_3"); }
    @Test public void MessageSend_Valid_4() throws Exception { TestFile.runTest("MessageSend_Valid_4"); }
    @Test public void MessageSend_Valid_5() throws Exception { TestFile.runTest("MessageSend_Valid_5"); }
    @Test public void MethodCall_Valid_1() throws Exception { TestFile.runTest("MethodCall_Valid_1"); }
    @Test public void MethodCall_Valid_2() throws Exception { TestFile.runTest("MethodCall_Valid_2"); }
    @Test public void MethodCall_Valid_3() throws Exception { TestFile.runTest("MethodCall_Valid_3"); }
    @Test public void MethodCall_Valid_4() throws Exception { TestFile.runTest("MethodCall_Valid_4"); }
    @Test public void MethodRef_Valid_1() throws Exception { TestFile.runTest("MethodRef_Valid_1"); }
    @Test public void MethodRef_Valid_2() throws Exception { TestFile.runTest("MethodRef_Valid_2"); }
    @Test public void Method_Valid_1() throws Exception { TestFile.runTest("Method_Valid_1"); }
    @Test public void MultiLineComment_Valid_1() throws Exception { TestFile.runTest("MultiLineComment_Valid_1"); }
    @Test public void MultiLineComment_Valid_2() throws Exception { TestFile.runTest("MultiLineComment_Valid_2"); }
    @Test public void NegationType_Valid_1() throws Exception { TestFile.runTest("NegationType_Valid_1"); }
    @Test public void NegationType_Valid_2() throws Exception { TestFile.runTest("NegationType_Valid_2"); }
    @Test public void NegationType_Valid_4() throws Exception { TestFile.runTest("NegationType_Valid_4"); }
    @Test public void OpenRecord_Valid_1() throws Exception { TestFile.runTest("OpenRecord_Valid_1"); }
    @Test public void OpenRecord_Valid_10() throws Exception { TestFile.runTest("OpenRecord_Valid_10"); }
    @Test public void OpenRecord_Valid_2() throws Exception { TestFile.runTest("OpenRecord_Valid_2"); }
    @Test public void OpenRecord_Valid_3() throws Exception { TestFile.runTest("OpenRecord_Valid_3"); }
    @Test public void OpenRecord_Valid_4() throws Exception { TestFile.runTest("OpenRecord_Valid_4"); }
    @Test public void OpenRecord_Valid_5() throws Exception { TestFile.runTest("OpenRecord_Valid_5"); }
    @Test public void OpenRecord_Valid_6() throws Exception { TestFile.runTest("OpenRecord_Valid_6"); }
    @Test public void OpenRecord_Valid_7() throws Exception { TestFile.runTest("OpenRecord_Valid_7"); }
    @Test public void OpenRecord_Valid_8() throws Exception { TestFile.runTest("OpenRecord_Valid_8"); }
    @Test public void OpenRecord_Valid_9() throws Exception { TestFile.runTest("OpenRecord_Valid_9"); }
    @Test public void ProcessAccess_Valid_1() throws Exception { TestFile.runTest("ProcessAccess_Valid_1"); }
    @Test public void ProcessAccess_Valid_2() throws Exception { TestFile.runTest("ProcessAccess_Valid_2"); }
    @Test public void Process_Valid_1() throws Exception { TestFile.runTest("Process_Valid_1"); }
    @Test public void Process_Valid_10() throws Exception { TestFile.runTest("Process_Valid_10"); }
    @Test public void Process_Valid_11() throws Exception { TestFile.runTest("Process_Valid_11"); }
    @Test public void Process_Valid_12() throws Exception { TestFile.runTest("Process_Valid_12"); }
    @Test public void Process_Valid_2() throws Exception { TestFile.runTest("Process_Valid_2"); }
    @Test public void Process_Valid_3() throws Exception { TestFile.runTest("Process_Valid_3"); }
    @Test public void Process_Valid_4() throws Exception { TestFile.runTest("Process_Valid_4"); }
    @Test public void Process_Valid_5() throws Exception { TestFile.runTest("Process_Valid_5"); }
    @Test public void Process_Valid_6() throws Exception { TestFile.runTest("Process_Valid_6"); }
    @Test public void Process_Valid_7() throws Exception { TestFile.runTest("Process_Valid_7"); }
    @Test public void Process_Valid_8() throws Exception { TestFile.runTest("Process_Valid_8"); }
    @Test public void Process_Valid_9() throws Exception { TestFile.runTest("Process_Valid_9"); }
    @Test public void Quantifiers_Valid_1() throws Exception { TestFile.runTest("Quantifiers_Valid_1"); }
    @Test public void Range_Valid_1() throws Exception { TestFile.runTest("Range_Valid_1"); }
    @Test public void RealConst_Valid_1() throws Exception { TestFile.runTest("RealConst_Valid_1"); }
    @Test public void RealDiv_Valid_1() throws Exception { TestFile.runTest("RealDiv_Valid_1"); }
    @Test public void RealDiv_Valid_2() throws Exception { TestFile.runTest("RealDiv_Valid_2"); }
    @Test public void RealDiv_Valid_3() throws Exception { TestFile.runTest("RealDiv_Valid_3"); }
    @Test public void RealDiv_Valid_4() throws Exception { TestFile.runTest("RealDiv_Valid_4"); }
    @Test public void RealDiv_Valid_5() throws Exception { TestFile.runTest("RealDiv_Valid_5"); }
    @Test public void RealDiv_Valid_6() throws Exception { TestFile.runTest("RealDiv_Valid_6"); }
    @Test public void RealDiv_Valid_7() throws Exception { TestFile.runTest("RealDiv_Valid_7"); }
    @Test public void RealNeg_Valid_1() throws Exception { TestFile.runTest("RealNeg_Valid_1"); }
    @Test public void RealNeg_Valid_2() throws Exception { TestFile.runTest("RealNeg_Valid_2"); }
    @Test public void RealSplit_Valid_1() throws Exception { TestFile.runTest("RealSplit_Valid_1"); }
    @Test public void RealSub_Valid_1() throws Exception { TestFile.runTest("RealSub_Valid_1"); }
    @Test public void RealSub_Valid_2() throws Exception { TestFile.runTest("RealSub_Valid_2"); }
    @Test public void RealSub_Valid_3() throws Exception { TestFile.runTest("RealSub_Valid_3"); }
    @Test public void Real_Valid_1() throws Exception { TestFile.runTest("Real_Valid_1"); }
    @Test public void RecordAccess_Valid_1() throws Exception { TestFile.runTest("RecordAccess_Valid_1"); }
    @Test public void RecordAccess_Valid_2() throws Exception { TestFile.runTest("RecordAccess_Valid_2"); }
    @Test public void RecordAssign_Valid_1() throws Exception { TestFile.runTest("RecordAssign_Valid_1"); }
    @Test public void RecordAssign_Valid_10() throws Exception { TestFile.runTest("RecordAssign_Valid_10"); }
    @Test public void RecordAssign_Valid_2() throws Exception { TestFile.runTest("RecordAssign_Valid_2"); }
    @Test public void RecordAssign_Valid_3() throws Exception { TestFile.runTest("RecordAssign_Valid_3"); }
    @Test public void RecordAssign_Valid_4() throws Exception { TestFile.runTest("RecordAssign_Valid_4"); }
    @Test public void RecordAssign_Valid_5() throws Exception { TestFile.runTest("RecordAssign_Valid_5"); }
    @Test public void RecordAssign_Valid_6() throws Exception { TestFile.runTest("RecordAssign_Valid_6"); }
    @Test public void RecordAssign_Valid_7() throws Exception { TestFile.runTest("RecordAssign_Valid_7"); }
    @Test public void RecordAssign_Valid_8() throws Exception { TestFile.runTest("RecordAssign_Valid_8"); }
    @Test public void RecordAssign_Valid_9() throws Exception { TestFile.runTest("RecordAssign_Valid_9"); }
    @Test public void RecordCoercion_Valid_1() throws Exception { TestFile.runTest("RecordCoercion_Valid_1"); }
    @Test public void RecordConversion_Valid_1() throws Exception { TestFile.runTest("RecordConversion_Valid_1"); }
    @Test public void RecordDefine_Valid_1() throws Exception { TestFile.runTest("RecordDefine_Valid_1"); }
    @Test public void RecordDefine_Valid_2() throws Exception { TestFile.runTest("RecordDefine_Valid_2"); }
    @Test public void RecursiveType_Valid_1() throws Exception { TestFile.runTest("RecursiveType_Valid_1"); }
    @Test public void RecursiveType_Valid_10() throws Exception { TestFile.runTest("RecursiveType_Valid_10"); }
    @Test public void RecursiveType_Valid_11() throws Exception { TestFile.runTest("RecursiveType_Valid_11"); }
    @Test public void RecursiveType_Valid_12() throws Exception { TestFile.runTest("RecursiveType_Valid_12"); }
    @Test public void RecursiveType_Valid_13() throws Exception { TestFile.runTest("RecursiveType_Valid_13"); }
    @Test public void RecursiveType_Valid_14() throws Exception { TestFile.runTest("RecursiveType_Valid_14"); }
    @Test public void RecursiveType_Valid_15() throws Exception { TestFile.runTest("RecursiveType_Valid_15"); }
    @Test public void RecursiveType_Valid_16() throws Exception { TestFile.runTest("RecursiveType_Valid_16"); }
    @Test public void RecursiveType_Valid_17() throws Exception { TestFile.runTest("RecursiveType_Valid_17"); }
    @Test public void RecursiveType_Valid_18() throws Exception { TestFile.runTest("RecursiveType_Valid_18"); }
    @Test public void RecursiveType_Valid_19() throws Exception { TestFile.runTest("RecursiveType_Valid_19"); }
    @Test public void RecursiveType_Valid_2() throws Exception { TestFile.runTest("RecursiveType_Valid_2"); }
    @Test public void RecursiveType_Valid_20() throws Exception { TestFile.runTest("RecursiveType_Valid_20"); }
    @Test public void RecursiveType_Valid_21() throws Exception { TestFile.runTest("RecursiveType_Valid_21"); }
    @Test public void RecursiveType_Valid_22() throws Exception { TestFile.runTest("RecursiveType_Valid_22"); }
    @Test public void RecursiveType_Valid_23() throws Exception { TestFile.runTest("RecursiveType_Valid_23"); }
    @Test public void RecursiveType_Valid_24() throws Exception { TestFile.runTest("RecursiveType_Valid_24"); }
    @Test public void RecursiveType_Valid_25() throws Exception { TestFile.runTest("RecursiveType_Valid_25"); }
    @Test public void RecursiveType_Valid_26() throws Exception { TestFile.runTest("RecursiveType_Valid_26"); }
    @Test public void RecursiveType_Valid_27() throws Exception { TestFile.runTest("RecursiveType_Valid_27"); }
    @Test public void RecursiveType_Valid_30() throws Exception { TestFile.runTest("RecursiveType_Valid_30"); }
    @Test public void RecursiveType_Valid_6() throws Exception { TestFile.runTest("RecursiveType_Valid_6"); }
    @Test public void RecursiveType_Valid_7() throws Exception { TestFile.runTest("RecursiveType_Valid_7"); }
    @Test public void RecursiveType_Valid_8() throws Exception { TestFile.runTest("RecursiveType_Valid_8"); }
    @Test public void RecursiveType_Valid_9() throws Exception { TestFile.runTest("RecursiveType_Valid_9"); }
    @Test public void Reference_Valid_1() throws Exception { TestFile.runTest("Reference_Valid_1"); }
    @Test public void Reference_Valid_2() throws Exception { TestFile.runTest("Reference_Valid_2"); }
    @Test public void Reference_Valid_3() throws Exception { TestFile.runTest("Reference_Valid_3"); }
    @Test public void Reference_Valid_4() throws Exception { TestFile.runTest("Reference_Valid_4"); }
    @Test public void Reference_Valid_5() throws Exception { TestFile.runTest("Reference_Valid_5"); }
    @Test public void Remainder_Valid_1() throws Exception { TestFile.runTest("Remainder_Valid_1"); }
    @Test public void Requires_Valid_1() throws Exception { TestFile.runTest("Requires_Valid_1"); }
    @Test public void Resolution_Valid_1() throws Exception { TestFile.runTest("Resolution_Valid_1"); }
    @Test public void SingleLineComment_Valid_1() throws Exception { TestFile.runTest("SingleLineComment_Valid_1"); }
    @Test public void Skip_Valid_1() throws Exception { TestFile.runTest("Skip_Valid_1"); }
    @Test public void String_Valid_1() throws Exception { TestFile.runTest("String_Valid_1"); }
    @Test public void String_Valid_2() throws Exception { TestFile.runTest("String_Valid_2"); }
    @Test public void String_Valid_3() throws Exception { TestFile.runTest("String_Valid_3"); }
    @Test public void String_Valid_4() throws Exception { TestFile.runTest("String_Valid_4"); }
    @Test public void String_Valid_5() throws Exception { TestFile.runTest("String_Valid_5"); }
    @Test public void String_Valid_6() throws Exception { TestFile.runTest("String_Valid_6"); }
    @Test public void String_Valid_7() throws Exception { TestFile.runTest("String_Valid_7"); }
    @Test public void String_Valid_8() throws Exception { TestFile.runTest("String_Valid_8"); }
    @Test public void Subtype_Valid_1() throws Exception { TestFile.runTest("Subtype_Valid_1"); }
    @Test public void Subtype_Valid_10() throws Exception { TestFile.runTest("Subtype_Valid_10"); }
    @Test public void Subtype_Valid_11() throws Exception { TestFile.runTest("Subtype_Valid_11"); }
    @Test public void Subtype_Valid_12() throws Exception { TestFile.runTest("Subtype_Valid_12"); }
    @Test public void Subtype_Valid_13() throws Exception { TestFile.runTest("Subtype_Valid_13"); }
    @Test public void Subtype_Valid_14() throws Exception { TestFile.runTest("Subtype_Valid_14"); }
    @Test public void Subtype_Valid_2() throws Exception { TestFile.runTest("Subtype_Valid_2"); }
    @Test public void Subtype_Valid_3() throws Exception { TestFile.runTest("Subtype_Valid_3"); }
    @Test public void Subtype_Valid_4() throws Exception { TestFile.runTest("Subtype_Valid_4"); }
    @Test public void Subtype_Valid_5() throws Exception { TestFile.runTest("Subtype_Valid_5"); }
    @Test public void Subtype_Valid_6() throws Exception { TestFile.runTest("Subtype_Valid_6"); }
    @Test public void Subtype_Valid_7() throws Exception { TestFile.runTest("Subtype_Valid_7"); }
    @Test public void Subtype_Valid_8() throws Exception { TestFile.runTest("Subtype_Valid_8"); }
    @Test public void Subtype_Valid_9() throws Exception { TestFile.runTest("Subtype_Valid_9"); }
    @Test public void Switch_Valid_1() throws Exception { TestFile.runTest("Switch_Valid_1"); }
    @Test public void Switch_Valid_10() throws Exception { TestFile.runTest("Switch_Valid_10"); }
    @Test public void Switch_Valid_11() throws Exception { TestFile.runTest("Switch_Valid_11"); }
    @Test public void Switch_Valid_12() throws Exception { TestFile.runTest("Switch_Valid_12"); }
    @Test public void Switch_Valid_13() throws Exception { TestFile.runTest("Switch_Valid_13"); }
    @Test public void Switch_Valid_2() throws Exception { TestFile.runTest("Switch_Valid_2"); }
    @Test public void Switch_Valid_3() throws Exception { TestFile.runTest("Switch_Valid_3"); }
    @Test public void Switch_Valid_4() throws Exception { TestFile.runTest("Switch_Valid_4"); }
    @Test public void Switch_Valid_5() throws Exception { TestFile.runTest("Switch_Valid_5"); }
    @Test public void Switch_Valid_6() throws Exception { TestFile.runTest("Switch_Valid_6"); }
    @Test public void Switch_Valid_7() throws Exception { TestFile.runTest("Switch_Valid_7"); }
    @Test public void Switch_Valid_8() throws Exception { TestFile.runTest("Switch_Valid_8"); }
    @Test public void Switch_Valid_9() throws Exception { TestFile.runTest("Switch_Valid_9"); }
    @Test public void Syntax_Valid_1() throws Exception { TestFile.runTest("Syntax_Valid_1"); }
    @Test public void TupleType_Valid_1() throws Exception { TestFile.runTest("TupleType_Valid_1"); }
    @Test public void TupleType_Valid_2() throws Exception { TestFile.runTest("TupleType_Valid_2"); }
    @Test public void TupleType_Valid_3() throws Exception { TestFile.runTest("TupleType_Valid_3"); }
    @Test public void TupleType_Valid_4() throws Exception { TestFile.runTest("TupleType_Valid_4"); }
    @Test public void TupleType_Valid_5() throws Exception { TestFile.runTest("TupleType_Valid_5"); }
    @Test public void TupleType_Valid_6() throws Exception { TestFile.runTest("TupleType_Valid_6"); }
    @Test public void TupleType_Valid_7() throws Exception { TestFile.runTest("TupleType_Valid_7"); }
    @Test public void TupleType_Valid_8() throws Exception { TestFile.runTest("TupleType_Valid_8"); }
    @Test public void TypeEquals_Valid_1() throws Exception { TestFile.runTest("TypeEquals_Valid_1"); }
    @Test public void TypeEquals_Valid_10() throws Exception { TestFile.runTest("TypeEquals_Valid_10"); }
    @Test public void TypeEquals_Valid_11() throws Exception { TestFile.runTest("TypeEquals_Valid_11"); }
    @Test public void TypeEquals_Valid_12() throws Exception { TestFile.runTest("TypeEquals_Valid_12"); }
    @Test public void TypeEquals_Valid_14() throws Exception { TestFile.runTest("TypeEquals_Valid_14"); }
    @Test public void TypeEquals_Valid_15() throws Exception { TestFile.runTest("TypeEquals_Valid_15"); }
    @Test public void TypeEquals_Valid_16() throws Exception { TestFile.runTest("TypeEquals_Valid_16"); }
    @Test public void TypeEquals_Valid_17() throws Exception { TestFile.runTest("TypeEquals_Valid_17"); }
    @Test public void TypeEquals_Valid_18() throws Exception { TestFile.runTest("TypeEquals_Valid_18"); }
    @Test public void TypeEquals_Valid_19() throws Exception { TestFile.runTest("TypeEquals_Valid_19"); }
    @Test public void TypeEquals_Valid_2() throws Exception { TestFile.runTest("TypeEquals_Valid_2"); }
    @Test public void TypeEquals_Valid_20() throws Exception { TestFile.runTest("TypeEquals_Valid_20"); }
    @Test public void TypeEquals_Valid_21() throws Exception { TestFile.runTest("TypeEquals_Valid_21"); }
    @Test public void TypeEquals_Valid_24() throws Exception { TestFile.runTest("TypeEquals_Valid_24"); }
    @Test public void TypeEquals_Valid_25() throws Exception { TestFile.runTest("TypeEquals_Valid_25"); }
    @Test public void TypeEquals_Valid_27() throws Exception { TestFile.runTest("TypeEquals_Valid_27"); }
    @Test public void TypeEquals_Valid_28() throws Exception { TestFile.runTest("TypeEquals_Valid_28"); }
    @Test public void TypeEquals_Valid_29() throws Exception { TestFile.runTest("TypeEquals_Valid_29"); }
    @Test public void TypeEquals_Valid_3() throws Exception { TestFile.runTest("TypeEquals_Valid_3"); }
    @Test public void TypeEquals_Valid_30() throws Exception { TestFile.runTest("TypeEquals_Valid_30"); }
    @Test public void TypeEquals_Valid_31() throws Exception { TestFile.runTest("TypeEquals_Valid_31"); }
    @Test public void TypeEquals_Valid_32() throws Exception { TestFile.runTest("TypeEquals_Valid_32"); }
    @Test public void TypeEquals_Valid_33() throws Exception { TestFile.runTest("TypeEquals_Valid_33"); }
    @Test public void TypeEquals_Valid_34() throws Exception { TestFile.runTest("TypeEquals_Valid_34"); }
    @Test public void TypeEquals_Valid_35() throws Exception { TestFile.runTest("TypeEquals_Valid_35"); }
    @Test public void TypeEquals_Valid_39() throws Exception { TestFile.runTest("TypeEquals_Valid_39"); }
    @Test public void TypeEquals_Valid_40() throws Exception { TestFile.runTest("TypeEquals_Valid_40"); }
    @Test public void TypeEquals_Valid_42() throws Exception { TestFile.runTest("TypeEquals_Valid_42"); }
    @Test public void TypeEquals_Valid_43() throws Exception { TestFile.runTest("TypeEquals_Valid_43"); }
    @Test public void TypeEquals_Valid_44() throws Exception { TestFile.runTest("TypeEquals_Valid_44"); }
    @Test public void TypeEquals_Valid_45() throws Exception { TestFile.runTest("TypeEquals_Valid_45"); }
    @Test public void TypeEquals_Valid_46() throws Exception { TestFile.runTest("TypeEquals_Valid_46"); }
    @Test public void TypeEquals_Valid_47() throws Exception { TestFile.runTest("TypeEquals_Valid_47"); }
    @Test public void TypeEquals_Valid_5() throws Exception { TestFile.runTest("TypeEquals_Valid_5"); }
    @Test public void TypeEquals_Valid_6() throws Exception { TestFile.runTest("TypeEquals_Valid_6"); }
    @Test public void TypeEquals_Valid_7() throws Exception { TestFile.runTest("TypeEquals_Valid_7"); }
    @Test public void TypeEquals_Valid_8() throws Exception { TestFile.runTest("TypeEquals_Valid_8"); }
    @Test public void TypeEquals_Valid_9() throws Exception { TestFile.runTest("TypeEquals_Valid_9"); }
    @Test public void UnionType_Valid_1() throws Exception { TestFile.runTest("UnionType_Valid_1"); }
    @Test public void UnionType_Valid_10() throws Exception { TestFile.runTest("UnionType_Valid_10"); }
    @Test public void UnionType_Valid_11() throws Exception { TestFile.runTest("UnionType_Valid_11"); }
    @Test public void UnionType_Valid_12() throws Exception { TestFile.runTest("UnionType_Valid_12"); }
    @Test public void UnionType_Valid_13() throws Exception { TestFile.runTest("UnionType_Valid_13"); }
    @Test public void UnionType_Valid_14() throws Exception { TestFile.runTest("UnionType_Valid_14"); }
    @Test public void UnionType_Valid_15() throws Exception { TestFile.runTest("UnionType_Valid_15"); }
    @Test public void UnionType_Valid_16() throws Exception { TestFile.runTest("UnionType_Valid_16"); }
    @Test public void UnionType_Valid_17() throws Exception { TestFile.runTest("UnionType_Valid_17"); }
    @Test public void UnionType_Valid_18() throws Exception { TestFile.runTest("UnionType_Valid_18"); }
    @Test public void UnionType_Valid_19() throws Exception { TestFile.runTest("UnionType_Valid_19"); }
    @Test public void UnionType_Valid_2() throws Exception { TestFile.runTest("UnionType_Valid_2"); }
    @Test public void UnionType_Valid_20() throws Exception { TestFile.runTest("UnionType_Valid_20"); }
    @Test public void UnionType_Valid_21() throws Exception { TestFile.runTest("UnionType_Valid_21"); }
    @Test public void UnionType_Valid_22() throws Exception { TestFile.runTest("UnionType_Valid_22"); }
    @Test public void UnionType_Valid_23() throws Exception { TestFile.runTest("UnionType_Valid_23"); }
    @Test public void UnionType_Valid_3() throws Exception { TestFile.runTest("UnionType_Valid_3"); }
    @Test public void UnionType_Valid_4() throws Exception { TestFile.runTest("UnionType_Valid_4"); }
    @Test public void UnionType_Valid_5() throws Exception { TestFile.runTest("UnionType_Valid_5"); }
    @Test public void UnionType_Valid_6() throws Exception { TestFile.runTest("UnionType_Valid_6"); }
    @Test public void UnionType_Valid_7() throws Exception { TestFile.runTest("UnionType_Valid_7"); }
    @Test public void UnionType_Valid_8() throws Exception { TestFile.runTest("UnionType_Valid_8"); }
    @Test public void UnionType_Valid_9() throws Exception { TestFile.runTest("UnionType_Valid_9"); }
    @Test public void Update_Valid_2() throws Exception { TestFile.runTest("Update_Valid_2"); }
    @Test public void VarDecl_Valid_1() throws Exception { TestFile.runTest("VarDecl_Valid_1"); }
    @Test public void VarDecl_Valid_2() throws Exception { TestFile.runTest("VarDecl_Valid_2"); }
    @Test public void VarDecl_Valid_3() throws Exception { TestFile.runTest("VarDecl_Valid_3"); }
    @Test public void VarDecl_Valid_4() throws Exception { TestFile.runTest("VarDecl_Valid_4"); }
    @Test public void While_Valid_1() throws Exception { TestFile.runTest("While_Valid_1"); }
    @Test public void While_Valid_10() throws Exception { TestFile.runTest("While_Valid_10"); }
    @Test public void While_Valid_11() throws Exception { TestFile.runTest("While_Valid_11"); }
    @Test public void While_Valid_12() throws Exception { TestFile.runTest("While_Valid_12"); }
    @Test public void While_Valid_14() throws Exception { TestFile.runTest("While_Valid_14"); }
    @Test public void While_Valid_16() throws Exception { TestFile.runTest("While_Valid_16"); }
    @Test public void While_Valid_17() throws Exception { TestFile.runTest("While_Valid_17"); }
    @Test public void While_Valid_18() throws Exception { TestFile.runTest("While_Valid_18"); }
    @Test public void While_Valid_19() throws Exception { TestFile.runTest("While_Valid_19"); }
    @Test public void While_Valid_2() throws Exception { TestFile.runTest("While_Valid_2"); }
    @Test public void While_Valid_20() throws Exception { TestFile.runTest("While_Valid_20"); }
    @Test public void While_Valid_21() throws Exception { TestFile.runTest("While_Valid_21"); }
    @Test public void While_Valid_22() throws Exception { TestFile.runTest("While_Valid_22"); }
    @Test public void While_Valid_23() throws Exception { TestFile.runTest("While_Valid_23"); }
    @Test public void While_Valid_24() throws Exception { TestFile.runTest("While_Valid_24"); }
    @Test public void While_Valid_25() throws Exception { TestFile.runTest("While_Valid_25"); }
    @Test public void While_Valid_26() throws Exception { TestFile.runTest("While_Valid_26"); }
    @Test public void While_Valid_27() throws Exception { TestFile.runTest("While_Valid_27"); }
    @Test public void While_Valid_28() throws Exception { TestFile.runTest("While_Valid_28"); }
    @Test public void While_Valid_29() throws Exception { TestFile.runTest("While_Valid_29"); }
    @Test public void While_Valid_3() throws Exception { TestFile.runTest("While_Valid_3"); }
    @Test public void While_Valid_30() throws Exception { TestFile.runTest("While_Valid_30"); }
    @Test public void While_Valid_31() throws Exception { TestFile.runTest("While_Valid_31"); }
    @Test public void While_Valid_32() throws Exception { TestFile.runTest("While_Valid_32"); }
    @Test public void While_Valid_33() throws Exception { TestFile.runTest("While_Valid_33"); }
    @Test public void While_Valid_34() throws Exception { TestFile.runTest("While_Valid_34"); }
    @Test public void While_Valid_35() throws Exception { TestFile.runTest("While_Valid_35"); }
    @Test public void While_Valid_36() throws Exception { TestFile.runTest("While_Valid_36"); }
    @Test public void While_Valid_37() throws Exception { TestFile.runTest("While_Valid_37"); }
    @Test public void While_Valid_38() throws Exception { TestFile.runTest("While_Valid_38"); }
    @Test public void While_Valid_39() throws Exception { TestFile.runTest("While_Valid_39"); }
    @Test public void While_Valid_40() throws Exception { TestFile.runTest("While_Valid_40"); }
    @Test public void While_Valid_41() throws Exception { TestFile.runTest("While_Valid_41"); }
    @Test public void While_Valid_42() throws Exception { TestFile.runTest("While_Valid_42"); }
    @Test public void While_Valid_43() throws Exception { TestFile.runTest("While_Valid_43"); }
    @Test public void While_Valid_44() throws Exception { TestFile.runTest("While_Valid_44"); }
    @Test public void While_Valid_45() throws Exception { TestFile.runTest("While_Valid_45"); }
    @Test public void While_Valid_46() throws Exception { TestFile.runTest("While_Valid_46"); }
    @Test public void While_Valid_9() throws Exception { TestFile.runTest("While_Valid_9"); }

/**/
}